global int altitudeLevel = $readAltitude$();
global int currentAltitude;
global int difAlt;
global int degree = 0;

/** 
  * Function that represents a turn 
  * @param length, the total length which drone go upwards
  * @return void
  */
void $oneTurn$(int length){
     $turnSpray$(true);
     $moveHorizontally$(length); // Drone moves
    
     $turnSpray$(false);
     while(degree < 90){  
    	 $turnHeading$(1);       // Drone turns right
	 degree = degree + 1;
     }
     $turnSpray$(true);
    
     degree = 0;

     $moveHorizontally$(1);    	// Drone moves 1 meter to left
    
     $turnSpray$(false);
     do{
        $turnHeading$(1);
        degree = degree + 1; 
     }while(degree < 90);        // Drone facing backwards at this point
     $turnSpray$(true);

     $moveHorizontally$(length);
    
     currentAltitude = $readAltitude$();

     if(degree != 0){
        $turnSpray$(false); 
        $turnHeading$(-90); 	// Drone turns to left again
      
        if (currentAltitude < altitudeLevel){	// If drone lose altitude any reason, ascend to original level
	    difAlt = altitudeLevel - currentAltitude;
	    $moveVertically$(difAlt);
            $turnSpray$(true);
        } 
        elseif (currentAltitude > altitudeLevel){   // If drone is at higher level than necessary, descend to original level
	    difAlt = currentAltitude - altitudeLevel;
	    $moveVertically$(difAlt);
            $turnSpray$(true);
        }
        else{					// Drone is at original vertical level, no need to change altitude
            $turnSpray$(true);  
        }
     }
    
     $moveHorizontally$(1);       //Now drone is ready to go upwards
     degree = 0;
    
     $turnSpray$(false);
     while(degree < 90){  
    	 $turnHeading$(-1);       //Drone turns left and face upwards
	 degree = degree + 1;
     }
     return;				
}

/* Test program 1
   Drone sprays equilateral triangular shaped with 10 km edges moving on vertical plane (in 2d)
   Assume that drone start from the left corner of the base edge and facing upwards */
$main$(){
    const string serial = $get$();
    << serial_numbers >>[3] = {"A33DFA", "FA4G2", "AFVH6", };

    $print$(serial);
    try {
    	$connect$(serial);
    }
    catch {
	$print$("Problem with connection");
    }
    
    // Check whether drone facing right heading
    int currentHeading = $readHeader$();
    if(currentHeading != 0){
	$turnHeading$(-1 * currentHeading);
    }

    $moveVertically$(15); // Move drone to 1.5 meter up

    // First vertical half of triangle
    for(int lengthDist = 1; lengthDist < 10000; lengthDist = lengthDist + 1; ){
        $oneTurn$(lengthDist);
    }

    // Second vertical half of triangle
    for(int lengthDist = 10000; lengthDist > 0; lengthDist = lengthDist - 1; ){
        $oneTurn$(lengthDist);
    }
}
